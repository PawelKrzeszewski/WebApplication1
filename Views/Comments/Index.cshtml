@model PaginatedList<WebApplication1.Models.Comment>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
@using (Html.BeginForm())
{
    <p>
        Search in description: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>

}
<table class="table">
    <thead>
        <tr>
            <th>
                Description
            </th>
            <th>
                @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                @Html.ActionLink("ProductID", "Index", new { sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                Creator ID
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    if(item.IsDeleted){

            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateCreated)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Product.ProductID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CreatorID)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.CommentID">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.CommentID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.CommentID">Delete</a>
                    </td>
                </tr>   
            }

       
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>